@page "/reports"
@rendermode InteractiveServer
@using Monkey.Core.Projections.Games
@using Monkey.Data.Data
@using Monkey.Data.Data.Entities
@using Monkey.Data
@using Monkey.Core.Services.GameServices
@using Monkey.Core.Projections
@using Monkey.Web.ViewModels.Game
@inject IGameService gameService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavManager
<PageTitle>Статистика</PageTitle>
@if (loading)
{
    
    <p>Loading...</p>
}
else
{
    <div class="field">
        <div class="container">
            <div class="content">
                <div class="description">СТАТИСТИКИ</div>
                <div class="box1">
                    <h3>Средна Оценка На Всички Игри: @averageRating/5.00</h3>
                </div>
                
                <div class="box1">
                    <h3>Общ Брой Свободни Игри: @freeGamesCount/20</h3>
                </div>
                <div class="lists">
                    <h3>Топ 5 Най-Играни Игри:</h3>
                    <ol class="styled-list">
                        @foreach (var game in top5MostPlayed)
                        {
                            <li>
                                <div class="game-card" @onclick="() => OpenGameDetails(game.Id)">

                                    <div class="game-info">
                                        <div class="game-name">Име на игра: @game.Name</div>
                                        <div class="game-count">Играна @game.Count пъти</div>
                                    </div>
                                </div>
                            </li>
                        }
                    </ol>
                </div>
                <div class="lists">
                    <h3>Топ 5 най-Високо Оценени Игри</h3>
                    <ol class="styled-list">
                        @foreach (var game in top5HighestRated)
                        {
                            <li>
                                 <div class="game-card" @onclick="() => OpenGameDetails(game.Id)">
                            
                                        <div class="game-info">
                                            <div class="game-name">Име на игра: @game.Name</div>
                                            <div class="game-count">Средна оценка: @game.AverageRating</div>
                                        </div>
                                 </div>
                            </li>
                        }
                    </ol>
                </div> 
            </div>
        </div>
    </div>
}

@code {
    private List<GameGeneralInfoProjection> GameList;
    private List<(string Name, int Count, int Id)> top5MostPlayed;
    private List<(string Name, double AverageRating, int Id)> top5HighestRated;
    private double averageRating;
    private int freeGamesCount;
    private bool loading = true;


    protected override async Task OnInitializedAsync()
    {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;
            var isAdmin = user.IsInRole("Admin");

            if (!isAdmin)
            {
                NavManager.NavigateTo("/home");
            }
            GameList = (await gameService.GetAllGames()).ToList();

            //averageRating = GameList.Where(g => g.Raitings.Any()).Average(g => g.Raitings.Average(r => r.Rate));
            freeGamesCount = GameList.Count(g => !g.isBooked);
            top5MostPlayed = GameList.OrderByDescending(g => g.Count).Take(5).Select(g => (g.Name, g.Count, g.Id)).ToList();
            //top5HighestRated = GameList.Where(g => g.Raitings.Any()).OrderByDescending(g => g.Raitings.Average(r => r.Rate)).Take(5).Select(g => (g.Name, g.Raitings.Average(r => r.Rate), g.Id)).ToList();

            loading = false;
        
        
    }

    private void OpenGameDetails(int gameId) => NavManager.NavigateTo($"/game/{gameId}");

}