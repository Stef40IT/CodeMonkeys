@page "/game/wishList"
@using Monkey.Core.Services.FavoriteServices
@using Monkey.Data.Data.Entities
@inject IFavoriteService FavoriteService
@inject AuthenticationStateProvider AuthenticationStateProvider
@using System.Security.Claims
@inject NavigationManager NavigationManager

<h3>Моите любими игри</h3>

@if (games == null)
{
    <p>Зареждане...</p>
}
else if (games.Count == 0)
{
    <p>Няма добавени игри в списъка с желания.</p>
}
else
{
    <ul>
        @foreach (var game in games)
        {
            <li>
                <img src="@game.Picture" alt="@game.Name" width="100" />
                <div>
                    <h4>@game.Name</h4>
                    <p>@game.Description</p>
                    <button @onclick="() => RemoveFromFavorites(game.Id)">Премахване от любими</button>
                </div>
            </li>
        }
    </ul>
}

@code {
    private string UserId { get; set; }
    private List<Game> games;

    protected override async Task OnInitializedAsync()
    {
        UserId = await GetUserId();
        games = await FavoriteService.GetFavoriteGamesAsync(UserId);
    }

    private async Task<string> GetUserId()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        return user.Identity.IsAuthenticated ? user.FindFirstValue(ClaimTypes.NameIdentifier) : null;
    }

    private async Task RemoveFromFavorites(int gameId)
    {
        var userId = await GetUserId();
        if (!string.IsNullOrEmpty(userId))
        {
            await FavoriteService.RemoveFromFavoritesAsync(userId, gameId);
            games = await FavoriteService.GetFavoriteGamesAsync(userId);
        }
    }
}