@page "/game/{id:int}"
@using Monkey.Core.Services.CommentServices
@using Monkey.Core.Services.GameServices
@using Monkey.Data;
@inject ICommentService CommentService
@using Monkey.Data.Data.Entities;
@using System.Security.Claims
@inject IGameService gameService;
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider
@rendermode InteractiveServer

<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container-fluid">
        <a class="navbar-brand" href="#">Board Games</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item">
                    <a class="nav-link" href="/Account/Login">Начало</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/catalog">Каталог</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">Статистики</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/contact">Свържи се с нас</a>
                </li>
                @if (isAdmin)
                {
                    <li class="nav-item">
                        <a class="nav-link" href="/game/create">Добави игра</a>
                    </li>
                }
            </ul>
        </div>
    </div>
</nav>

<h3>Игра</h3>

@if (game != null)
{
    <div class="game-container">
        <div class="game-header">
            <div class="game-title">@game.Name</div>
            <div class="game-info">Сложност: @game.Difficulty | Оставащи: @game.Count</div>
        </div>
        <div class="game-image-container">
            <img src="@game.Picture" class="game-image" />
            <NavLink class="nav-link" href="catalog">
                    @*@<button class="action-button" @onclick="() => Return()"><b>Върни</b></button>*@
            </NavLink>
        </div>
        <div class="game-details-container">
            <div class="game-details">
                <b>  <p>@game.Description</p></b>
            </div>
            <div class="forma">
                <form>
                    <div class="form-field">
                        <label for="name">Въведи име:</label>
                        <input type="text" id="name" name="name" required>
                    </div>
                    <div class="form-field">
                        <label for="start-date">Дата от:</label>
                        <input type="date" id="start-date" name="start-date" required>
                    </div>
                    <div class="form-field">
                        <label for="start-time">Час от:</label>
                        <input type="text" id="start-time" name="start-time" required pattern="[0-9]{1,2}:[0-9]{2}">
                    </div>
                    <div class="form-field">
                        <label for="end-date">Дата до:</label>
                        <input type="date" id="end-date" name="end-date" required>
                    </div>
                    <div class="form-field">
                        <label for="end-time">Час до:</label>
                        <input type="text" id="end-time" name="end-time" required pattern="[0-9]{1,2}:[0-9]{2}">
                    </div>

                    <button type="submit"><b>Запази игра</b></button>

                </form>
            </div>
        </div>
    </div>


    <h3>Коментари за играта</h3>

    <h4>Добави коментар</h4>
    <EditForm method="post" Model="Comment" OnValidSubmit="HandleValidSubmit" FormName="commentForm">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <input @bind-value="Comment.Text" placeholder="Вашият коментар"></input>

        <button type="submit">
            Добави
        </button>
    </EditForm>
    @if (comments == null)
    {
        <p>Зареждане...</p>
    }
    else
    {
        <ul>
            @foreach (var comment in comments)
            {
                <li>
                    <strong>@comment.User.UserName</strong> (@comment.Hour.ToString("g")):
                    <p>@comment.Text</p>
                    @if(isAdmin)
                    {
                        <button @onclick="async () => await Delete(comment)">Изтрий</button>
                    }
                </li>
            }
        </ul>
    }


    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <p style="color:red;">@errorMessage</p>
    }
}
@code {
    private Game game;

    [Parameter]
    public int Id { get; set; }
    bool isAdmin;

    private List<Comment> comments;
    [SupplyParameterFromForm(FormName = "commentForm")]
    public Comment Comment { get; set; } = new Comment();
    private string errorMessage;
    public bool isAdmin;

    protected override async Task OnInitializedAsync()
    {
        game = gameService.GetById(Id);
        await LoadComments();


        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        isAdmin = user.IsInRole("Admin");

        if (user.Identity.IsAuthenticated)
        {
            Comment.UserId = user.FindFirst(c => c.Type == ClaimTypes.NameIdentifier)?.Value;
        }
        else
        {
            Navigation.NavigateTo("/login");
        }
    }

    private async Task Delete(Comment comment)
    {
        await CommentService.DeleteCommentAsync(comment);
        await LoadComments();
    }

    private async Task LoadComments()
    {
        comments = await CommentService.GetCommentsByGameIdAsync(Id);
    }


    private async Task HandleValidSubmit()
    {
        if (string.IsNullOrEmpty(Comment.Text))
        {
            errorMessage = "Коментарът не може да бъде празен.";
            return;
        }
        Comment.GameId = Id;
        Comment.Hour = DateTime.Now;
        await CommentService.AddCommentAsync(Comment);
        
        comments = new List<Comment>();
        
        await LoadComments();

        //Navigation.NavigateTo($"game/{this.Id}", forceLoad:true);
    }
}
